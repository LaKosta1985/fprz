# Generated by Django 5.0.1 on 2024-05-24 11:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', models.SlugField(default='free', max_length=255, unique=True, verbose_name='URL-не обязательно к заполнению, дублируется на латинице')),
                ('image', models.ImageField(blank=True, null=True, upload_to=users.models.user_directory_path, verbose_name='Аватар')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('status', models.CharField(blank=True, choices=[('Президент', 'Президент'), ('Секретарь', 'Секретарь'), ('Администратор', 'Администратор'), ('Антидопинговая работа', 'Антидопинговая работа'), ('free', 'free')], default='free', null=True, verbose_name='Статус')),
                ('status_in_Feder', models.CharField(blank=True, choices=[('true', 'член федерации'), ('false', 'не состоит')], null=True, verbose_name='Член Федерации?')),
                ('bench', models.CharField(blank=True, null=True, verbose_name='Ваш максимальный соревновательный присед')),
                ('press', models.CharField(blank=True, null=True, verbose_name='Ваш максимальный соревновательный жим')),
                ('d_lift', models.CharField(blank=True, null=True, verbose_name='Ваш максимальная соревновательная тяга')),
                ('sum', models.CharField(blank=True, null=True, verbose_name='Ваша максимальная сумма')),
                ('kat', models.CharField(choices=[('53', '53'), ('59', '59'), ('66', '66'), ('74', '74'), ('83', '83'), ('93', '93'), ('105', '105'), ('120', '120'), ('120+', '120+'), ('43', '43-жен'), ('47', '47-жен'), ('52', '52-жен'), ('57', '57-жен'), ('63', '63-жен'), ('69', '69-жен'), ('72', '72-жен'), ('76', '76-жен'), ('84', '84-жен'), ('84+', '84+-жен')], verbose_name='Ваша категория')),
                ('raz', models.CharField(blank=True, choices=[('б/р', 'б/р'), ('1', '1'), ('2', '2'), ('3', '3'), ('КМС', 'КМС'), ('МС', 'МС'), ('МСМК', 'МСМК')], null=True, verbose_name='Ваша разряд')),
                ('therd_name', models.CharField(blank=True, null=True, verbose_name='Вашe отчество')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('from_self', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
