# Generated by Django 5.0.1 on 2024-05-24 11:26

import django.db.models.deletion
import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Anti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Текст')),
                ('img_Head', models.ImageField(upload_to=main.models.anti_directory_path, verbose_name='Картинка')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата новости')),
                ('video', models.URLField(blank=True, null=True, verbose_name='ссылка с ютуб')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовать/скрыть')),
            ],
            options={
                'verbose_name': 'Антидопинг',
                'verbose_name_plural': 'Антидопинг',
                'db_table': 'antidoping',
                'ordering': ['-time_create'],
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polog', models.CharField(blank=True, null=True, verbose_name='Ссылка на положение')),
                ('status', models.CharField(max_length=100, verbose_name='Статус')),
                ('dopusk', models.CharField(max_length=100, verbose_name='Допуск')),
                ('name', models.TextField(verbose_name='Название соревнований')),
                ('disciplina', models.CharField(choices=[('ТЭ', 'ТЭ'), ('ТК', 'ТК'), ('ЖЭ', 'ЖЭ'), ('ЖК', 'ЖК'), ('Все дисциплины', 'Все дисциплины')], verbose_name='Дисциплина')),
                ('vozrast', models.CharField(max_length=100, verbose_name='Возрастная группа')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Начало соревнований')),
                ('finish', models.DateField(blank=True, null=True, verbose_name='Конец соревнований')),
                ('place', models.CharField(max_length=100, verbose_name='Место соревнований')),
                ('srok', models.DateField(blank=True, null=True, verbose_name='Срок приема заявок')),
                ('srokEdit', models.DateField(blank=True, null=True, verbose_name='Срок редактирования заявок')),
                ('zayav', models.CharField(blank=True, null=True, verbose_name='Ссылка на заявку, если нужно')),
            ],
            options={
                'verbose_name': 'Календарь',
                'verbose_name_plural': 'Календарь',
                'db_table': 'calendar',
            },
        ),
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docpath', models.FileField(upload_to='doc/doc/')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовать')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'db_table': 'doc',
            },
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL-не обязательно к заполнению, дублируется на латинице')),
                ('title', models.CharField(blank=True, max_length=20, null=True, verbose_name='Заголовок альбома')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Описание альбома')),
                ('image', models.ImageField(blank=True, null=True, upload_to=main.models.foto_directory_path, verbose_name='Аватар альбома')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата опубликования альбома')),
            ],
            options={
                'verbose_name': 'Альбом',
                'verbose_name_plural': 'Альбомы',
                'db_table': 'Albom',
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Текст')),
                ('img_Head', models.ImageField(upload_to=main.models.user_directory_path, verbose_name='Аватарка ленты')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата новости')),
                ('count_view', models.IntegerField(blank=True, default=1, null=True, verbose_name='Счетчик просмотров')),
                ('img_Body_1', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото1 ленты')),
                ('img_Body_2', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото2 ленты')),
                ('img_Body_3', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото3 ленты')),
                ('img_Body_4', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото4 ленты')),
                ('img_Body_5', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото5 ленты')),
                ('img_Body_6', models.ImageField(blank=True, null=True, upload_to=main.models.user_directory_path, verbose_name='Фото6 ленты')),
                ('video', models.URLField(blank=True, null=True, verbose_name='ссылка с ютуб')),
                ('like', models.IntegerField(blank=True, default=1, null=True, verbose_name='Лайки(не собаки)')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовать/скрыть')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'db_table': 'new',
                'ordering': ['-time_create'],
            },
        ),
        migrations.CreateModel(
            name='Polog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docpath', models.FileField(upload_to='doc/polog/', verbose_name='Выберете положение')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Положение',
                'verbose_name_plural': 'Положение',
                'db_table': 'polog',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docpath', models.FileField(upload_to='doc/protocol/')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Протокол',
                'verbose_name_plural': 'Протокол',
                'db_table': 'protocol',
            },
        ),
        migrations.CreateModel(
            name='Table_Norm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название таблицы норматива')),
                ('gender', models.CharField(choices=[('мужской', 'мужской'), ('женский', 'женский')], max_length=100, verbose_name='Пол')),
                ('equipment', models.CharField(choices=[('Экип', 'Экипировка'), ('Клас', 'Классика')], max_length=100, verbose_name='Экипировка')),
                ('Competition', models.CharField(choices=[('троеборье', 'троеборье'), ('жим', 'жим')], max_length=100, verbose_name='Упражнение')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Добавление/изменение таблицы нормативов',
                'verbose_name_plural': 'Добавление/изменение таблицы нормативов',
                'db_table': 'norm',
            },
        ),
        migrations.CreateModel(
            name='Table_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Таблица рекорда')),
                ('gender', models.CharField(choices=[('мужской', 'мужской'), ('женский', 'женский')], max_length=100, verbose_name='Пол')),
                ('equipment', models.CharField(choices=[('Экип', 'Экипировка'), ('Клас', 'Классика')], max_length=100, verbose_name='Экипировка')),
                ('Competition', models.CharField(choices=[('троеборье', 'троеборье'), ('жим', 'жим')], max_length=100, verbose_name='Упражнение')),
            ],
            options={
                'verbose_name': 'Добавление/изменение таблицы рекордов',
                'verbose_name_plural': 'Добавление/изменение таблицы рекордов',
                'db_table': 'record',
            },
        ),
        migrations.CreateModel(
            name='Table_Cat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('53', '53'), ('59', '59'), ('66', '66'), ('74', '74'), ('83', '83'), ('93', '93'), ('105', '105'), ('120', '120'), ('120+', '120+'), ('43', '43-жен'), ('47', '47-жен'), ('52', '52-жен'), ('57', '57-жен'), ('63', '63-жен'), ('69', '69-жен'), ('72', '72-жен'), ('76', '76-жен'), ('84', '84-жен'), ('84+', '84+-жен')], max_length=100, verbose_name='Категории')),
                ('third_j', models.CharField(null=True, verbose_name='Третий юн.')),
                ('second_j', models.CharField(null=True, verbose_name='Второй юн.')),
                ('first_j', models.CharField(null=True, verbose_name='Первый юн.')),
                ('third', models.CharField(null=True, verbose_name='Третий')),
                ('second', models.CharField(null=True, verbose_name='Второй')),
                ('first', models.CharField(null=True, verbose_name='Первый')),
                ('kms', models.CharField(null=True, verbose_name='КМС')),
                ('ms', models.CharField(null=True, verbose_name='МС')),
                ('msmk', models.CharField(null=True, verbose_name='МСМК')),
                ('cut', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.table_norm', verbose_name='Выберете таблицу для норматива(если в списке отсутствует нужная, то в начале создайте, см меню)')),
            ],
            options={
                'verbose_name': 'Редактирование норматива',
                'verbose_name_plural': 'Редактирование нормативов',
                'db_table': 'cut',
            },
        ),
        migrations.CreateModel(
            name='Table_Cat_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('53', '53'), ('59', '59'), ('66', '66'), ('74', '74'), ('83', '83'), ('93', '93'), ('105', '105'), ('120', '120'), ('120+', '120+'), ('43', '43-жен'), ('47', '47-жен'), ('52', '52-жен'), ('57', '57-жен'), ('63', '63-жен'), ('69', '69-жен'), ('72', '72-жен'), ('76', '76-жен'), ('84', '84-жен'), ('84+', '84+-жен')], max_length=100, verbose_name='Категории')),
                ('squat_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя рекордсмена в приседе')),
                ('squat', models.FloatField(blank=True, max_length=100, null=True, verbose_name='Приседание, кг')),
                ('date_squat', models.DateField(blank=True, null=True, verbose_name='Дата рекорда в приседании')),
                ('place_squat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место рекорда в приседании')),
                ('press_name', models.CharField(max_length=100, verbose_name='Имя рекордсмена в жиме')),
                ('press', models.FloatField(max_length=100, verbose_name='Жим, кг')),
                ('date_press', models.DateField(blank=True, null=True, verbose_name='Дата рекорда в жиме')),
                ('place_press', models.CharField(max_length=100, verbose_name='Место рекорда в жиме')),
                ('lift_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя рекордсмена в тяге')),
                ('lift', models.FloatField(blank=True, max_length=100, null=True, verbose_name='Тяга, кг')),
                ('date_lift', models.DateField(blank=True, null=True, verbose_name='Дата рекорда в тяге')),
                ('place_lift', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место рекорда в тяге')),
                ('sum_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя рекордсмена в сумме')),
                ('sum', models.FloatField(blank=True, max_length=100, null=True, verbose_name='Сумма, кг')),
                ('date_sum', models.DateField(blank=True, null=True, verbose_name='Дата рекорда в сумме')),
                ('place_sum', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место рекорда, сумма')),
                ('cut_rec', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.table_record', verbose_name='Таблица с рекордом(выберете категорию, при отсутствии нужно вначале заполнить таблицу с рекордом,смотри меню)')),
            ],
            options={
                'verbose_name': 'Редактирование рекорда',
                'verbose_name_plural': 'Редактирование рекорда',
                'db_table': 'cut_rec',
            },
        ),
    ]
